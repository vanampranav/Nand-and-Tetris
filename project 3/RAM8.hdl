// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load ,sel=address,a=aa,b=bb,c=cc,d=dd,e=ee,f=ff,g=gg,h=hh);
    Register(in=in,load=aa,out=o1);
    Register(in=in,load=bb,out=o2);
    Register(in=in,load=cc,out=o3);
    Register(in=in,load=dd,out=o4);
    Register(in=in,load=ee,out=o5);
    Register(in=in,load=ff,out=o6);
    Register(in=in,load=gg,out=o7);
    Register(in=in,load=hh,out=o8);
    Mux8Way16(a=o1,b=o2,c=o3,d=o4,e=o5,f=o6,g=o7,h=o8,sel=address,out=out);
}